package FlyFunPackage.CONTROLLER;

import FlyFunPackage.MODEL.Flight;
import FlyFunPackage.MODEL.Occupation;
import FlyFunPackage.MODEL.Passenger;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 *
 * @author Coconut
 */
public class servletPasajeroServicio extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            HttpSession session = request.getSession(true);
            ArrayList<Passenger> pasajeros = new ArrayList();
            Occupation OOW = (Occupation)session.getAttribute("occupationOW");
            
            
            int adult = (int)session.getAttribute("adult");
            int child = (int)session.getAttribute("child");
            int infant = (int)session.getAttribute("infant");
            
            for(int i=0; i < adult ; i++){
                String prefix = request.getParameter("prefix"+i);
                String name = request.getParameter("name"+i);
                String surname = request.getParameter("surname"+i);
                String nif = request.getParameter("nif"+i);
                String email = request.getParameter("email"+i);
                
                Passenger adulto = new Passenger(nif, prefix, name, surname, email, "adulto");
                pasajeros.add(adulto);
                out.println(adulto.getNif());
            }
            
            for(int i=0; i < child ; i++){
                String name = request.getParameter("nameNino"+i);
                String surname = request.getParameter("surnameNino"+i);
                String nif = request.getParameter("nifNino"+i);
                String email = request.getParameter("emailNino"+i);
            
                Passenger nino = new Passenger(nif, null, name, surname, email, "niño");
                pasajeros.add(nino);
                out.println(nino.getNif());
            }
            
            for(int i=0; i < infant ; i++){
                String name = request.getParameter("nameBebe"+i);
                String surname = request.getParameter("surnameBebe"+i);
                String nif = request.getParameter("nifBebe"+i);
            
                Passenger bebe = new Passenger(nif, null, name, surname, null, "bebe");
                pasajeros.add(bebe);
                out.println(bebe.getNif());
            }
            
            session.setAttribute("passengerOW", pasajeros);
            //OOW.setPassengers(pasajeros);
            
            if (((String)session.getAttribute("kindTrip")).equals("vuelta")){
                session.setAttribute("passengerR", pasajeros);
                //Occupation OR = (Occupation)session.getAttribute("occupationR");
                //OR.setPassengers(pasajeros);
            }
            out.println("<!DOCTYPE html>");
            out.println("<html>");
            out.println("<head>");
            out.println("<title>Servlet servletPasajeroServicio</title>");            
            out.println("</head>");
            out.println("<body>");
            out.println("<h1>Servlet servletPasajeroServicio at " + request.getContextPath() + "</h1>");
            out.println("</body>");
            out.println("</html>");
        }
    }



El prefijo también delata la financiera de la que depende la tarjeta. Se puede deducir que las que empiezan por 4 las designa VISA, las que lo hacen por 51 o 55 las entrega MasterCard o las que comienzan por 34 y 37 son de American Express, entre otros.

*********************************************************

<section class="pantalla-usuario" id="pantalla-usuario">
        </section>    
           <aside class="usuario" id="area-usuario">
                <form action="" class="formulario-cliente">
                    <div class="datos-usuario inicio-sesion">
                        <label for="idUsuario">Nombre de usuario</label>
                        <br>
                        <input type="email" id="idUsuario"/>
                        <br><br>
                        <label for="pass">Contraseña</label>
                        <br>
                        <input type="password" id="pass"/>
                        <br>
                        <button onclick="validaUsuario(idUsuario.value, pass.value)">Entra<i class="fa fa-sign-in fa-2x"></i></button>
                    </div>
                </form>
                <button onclick="window.location.href='cliente.jsp'"><i class="fa fa-plus-circle fa-2x"></i>Regístrate</button>
            </aside>

********************************************

    public ArrayList<Passenger> getOccupationBooked(Connection _connection, String bk){
//        int idP=0;
//        ArrayList<Passenger> pasajerosCheckin = new ArrayList();
//        try {
//            String pasajeroServicio = "select p.*, s.* from flyfunairlines.passenger p, flyfunairlines.service s where p.ID_PASSENGER in \n" +
//                    "(select PASAJERO from flyfunairlines.occupation where BOOKING_CODE=? and VUELO in \n" +
//                    "(select ID_FLY from flyfunairlines.flight where F_SALIDA < date_add(sysdate(), interval 10 day))) \n" +
//                    "and s.ID_SERVICE in (select SERVICIO from flyfunairlines.occupation_service where OCUPACION in \n" +
//                    "(select ID_OCP from flyfunairlines.occupation o, flyfunairlines.passenger ps where o.PASAJERO = ps.ID_PASSENGER and p.ID_PASSENGER = ps.ID_PASSENGER))\n" +
//                    "order by ID_PASSENGER;";
//            PreparedStatement pStps = _connection.prepareStatement(pasajeroServicio);
//                pStps.setString(1, bk);
//                ResultSet rs = pStps.executeQuery();
//                Passenger p = null;
//                while(rs.next()){
//                    if(idP == 0 || idP != rs.getInt("ID_PASSENGER")){
//                        idP = rs.getInt("ID_PASSENGER");
//                        p = new Passenger(idP, rs.getString("NIF"), rs.getString("PREFIJO"), rs.getString("NOMBRE"), rs.getString("APELLIDOS"), rs.getString("EMAIL"), rs.getString("TIPO"), null, null, null, null, null, null);
//                        pasajerosCheckin.add(p);
//                    }
//                    Service s = new Service(rs.getInt("ID_SERVICE"), rs.getString("DENOMINACION"), rs.getString("DESCRIPCION"), rs.getFloat("PRECIO"));
//                    p.getServices().add(s);
//                }
//            
//        } catch (SQLException ex) {
//            Logger.getLogger(Operation.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        return pasajerosCheckin;
//        
//    }

********************************************
vuelo por nombre y fecha delete
en las tablas ese vuelo en vuelobackup
			ocupacion de ese vuelo en ocupacionbackup
			tienen que quedar las ocupaciones de vuelo de vuelta

****************************************************
Detalle servicios-pasajeros:

select p.*, s.* from flyfunairlines.passenger p, flyfunairlines.service s where p.ID_PASSENGER in 
		(select PASAJERO from flyfunairlines.occupation where BOOKING_CODE='otmh82x8' and VUELO in 
        (select ID_FLY from flyfunairlines.flight where F_SALIDA < date_add(sysdate(), interval 10 day))) 
and s.ID_SERVICE in (select SERVICIO from flyfunairlines.occupation_service where OCUPACION in 
					(select ID_OCP from flyfunairlines.occupation o, flyfunairlines.passenger ps where o.PASAJERO = ps.ID_PASSENGER and p.ID_PASSENGER = ps.ID_PASSENGER))
order by ID_PASSENGER;

Detalle vuelo:

select * from flyfunairlines.flight where F_SALIDA < date_add(sysdate(), interval 10 day) and ID_FLY in(select VUELO from flyfunairlines.occupation where BOOKING_CODE='otmh82x8');

Pasajeros sin asiento:

select * from flyfunairlines.passenger where ID_PASSENGER in (select PASAJERO from flyfunairlines.occupation where BOOKING_CODE='otmh82x8' and ASIENTO is null);

Reserva total a modificar:

SELECT * FROM flyfunairlines.booking where BK_CODE='abm657en';

